<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kcindric</title>
    <link>https://www.kcindric.me/</link>
    <description>Recent content on kcindric</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Aug 2023 12:59:46 +0200</lastBuildDate><atom:link href="https://www.kcindric.me/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>List of my projects</title>
      <link>https://www.kcindric.me/projects/</link>
      <pubDate>Sun, 06 Aug 2023 12:59:46 +0200</pubDate>
      
      <guid>https://www.kcindric.me/projects/</guid>
      <description>Working on it&amp;hellip;</description>
    </item>
    
    <item>
      <title>PostgreSQL Full Text Search</title>
      <link>https://www.kcindric.me/posts/psql-full-text-search/</link>
      <pubDate>Sun, 06 Aug 2023 12:59:46 +0200</pubDate>
      
      <guid>https://www.kcindric.me/posts/psql-full-text-search/</guid>
      <description>Let&amp;rsquo;s say we are building an app for searching movies in our private collection. Our app, for simplicity, can only search movies using movie titles. In the following examples we&amp;rsquo;ll show a few different approaches how to do a full text search using PostgreSQL.
In this tutorial we&amp;rsquo;re going to use the sample database called &amp;ldquo;dvdrental&amp;rdquo; which can be found here.
Full Text Search using LIKE and ILIKE operators Let&amp;rsquo;s say we have a movie called &amp;ldquo;Darkness War&amp;rdquo; and we want to search it.</description>
    </item>
    
  </channel>
</rss>
